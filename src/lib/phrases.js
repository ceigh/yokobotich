// Bases
const mains = [
    '—ç—Ç–æ –Ω–µ—Å–µ—Ä—å–µ–∑–Ω–æ...',
    '—Ö–≤–∞—Ç–∏—Ç –º–µ–Ω—è –¥–æ–µ–±—ã–≤–∞—Ç—å, —Å–∫–∏–ø–∞–π',
    '—Ç–µ–ø–µ—Ä—å –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ —É —á–∞—Ç–∞ –º–æ–∑–≥–∏ –Ω–∞ –º–µ—Å—Ç–µ, —Å–∫–æ—Ä–µ–µ —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–¥–æ—Å!',
    '—è –Ω–µ —Ç–æ —á—Ç–æ –±—ã –ø—Ä–æ—Ç–∏–≤ —Ç–æ–≥–æ —á—Ç–æ –≤—ã —Å–∫–∏–ø–Ω—É–ª–∏ —Ä–æ–ª–∏–∫, –ø—Ä–æ—Å—Ç–æ –∏–¥–∏—Ç–µ –Ω–∞...',
    '—ë–±–∞–Ω—ã–µ —à–∏–∑–æ–∏–¥—ã, –∫–∞–∫–æ–µ –ø—Ä–∞–≤–æ –í–´ –∏–º–µ–µ—Ç–µ —Ç–∞–∫ –¥–µ–ª–∞—Ç—å?',
    '–≤—Å–µ –∫—Ç–æ —Å–µ–π—á–∞—Å –ø–∏—Å–∞–ª "–Ω—É –∏ –≥–æ–≤–Ω–æ" –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∑–∞–∫–æ–Ω—á–µ–Ω—ã–µ —Ç–≤–∞—Ä–∏',
    '—è –¥–æ–ª–≥–æ –¥—É–º–∞–ª, —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É, —á—Ç–æ –∂... –Ω–µ–∫—Å—Ç –≤–∏–¥–µ–æ!',
    '–æ—á–µ–≤–∏–¥–Ω–æ —á—Ç–æ –≤—Å–µ –∫—Ç–æ —Å–µ–π—á–∞—Å –≥–æ–≤–Ω–∏–ª –ø—Ä–æ—Å—Ç–æ —Ç—É–ø—ã–µ',
    '—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–ø–æ–∫—É—Ö–∞—Ö, –ø–æ—ç—Ç–æ–º—É –∑–∞—è–≤–ª—é –ª–∏—à—å, —á—Ç–æ —É–≤–∞–∂–∞–µ–º—ã–µ –∑—Ä–∏—Ç–µ–ª–∏ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫ —ç—Ç–æ–≥–æ —Ä–æ–ª–∏–∫–∞ :)',
    '—Å—Ç—Ä–∏–º–µ—Ä(-–∫–∞), —Ç–µ–±–µ –Ω–µ —Å—Ç—ã–¥–Ω–æ –∑–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—é –∫–æ—Ç–æ—Ä—É—é —Ç—ã –≤–∑—Ä–∞—Å—Ç–∏–ª(-–∞)? —ç—Ç–æ –∂–µ –ø—Ä–æ—Å—Ç–æ –µ–±–∞–Ω–∏—Å—å',
    '–≤–∏–¥–µ–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ, —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –º—ã, –∫–∞–∫ —Ä–∞–∑—É–º–Ω—ã–µ –ª—é–¥–∏, –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–∞—é—â–∏–π –Ω–∞—Å –∫–æ–Ω—Ç–µ–Ω—Ç, —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ',
    '–∑–∞–≥–æ–≤–Ω–µ–Ω–æ.',
    '–∑–∞–≥–æ–≤–Ω–∏–ª–∏!!!',
    '—Å–∫–∏–ø–Ω—É—Ç–æ',
    '–¥–∞–ª—å—à–µ –¥–∞–≤–∞–π',
    '—Ä–æ–ª–∏–∫ –≤ –≥–æ–≤–Ω–µ',
    '–æ–±–æ—Å—Ä–∞–ª–∏ —Ç–∞–∫–æ–π —Ö–æ—Ä–æ—à–∏–π —Ä–æ–ª–∏–∫, –∏ –≤–∞–º –Ω–µ —Å—Ç—ã–¥–Ω–æ?',
    '—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–¥–æ—Å',
    '–∏ –∑–∞—á–µ–º –≤—ã —Å–∫–∏–ø–Ω—É–ª–∏? –©–∞—Å —Ç–∞–∫–æ–µ –≥–æ–≤–Ω–æ –±—É–¥–µ—Ç –∫–æ—à–º–∞—Ä',
    '—Å–æ–≤–µ—Å—Ç—å –µ—Å—Ç—å —Å–∫–∏–ø–∞—Ç—å?',
    '–Ω–∞–∫–æ–Ω–µ—Ü —Ç–æ —ç—Ç–æ –≥–æ–≤–Ω–æ —Å–∫–∏–ø–Ω—É–ª–∏',
    '–Ω–∞–≥–æ–≤–Ω–∏–ª–∏, —É–≤–∞–∂–∞—é',
    '–±–æ–∂–µ –∂ —Ç—ã –º–æ–π, –Ω–∞–≥–æ–≤–Ω–∏–ª–∏ –Ω–∞–∫–æ–Ω–µ—Ü',
    '—Å–ª–∞–≤–∞ –±–æ–≥—É —Å–æ–æ–±—Ä–∞–∑–∏–ª–∏ –∑–∞–≥–æ–≤–Ω–∏—Ç—å —ç—Ç–æ—Ç —ë–±–Ω—É—Ç—ã–π –±—Ä–µ–¥',
    '–ø–æ–ª—É—á–∏–ª–æ—Å—å! –ù–∞–∫–æ–Ω–µ—Ü —Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ —Å–ø–∞–º–∏–ª –∏ –≤—ã –∑–∞–≥–æ–≤–Ω–∏–ª–∏',
    '–∞ –ø–æ—á–µ–º—É —Ä–æ—Ç –≤ –≥–æ–≤–Ω–µ?',
    '"–ì–æ—Ä–∏—Ç–µ –≤—ã –≤—Å–µ –≤ –∞–¥—É", –ø–æ–¥—É–º–∞–ª –∑–∞–∫–∞–∑–∞–≤—à–∏–π –∏ –æ–±–æ—Å—Ä–∞–ª—Å—è, –¥–∞–ª—å—à–µ',
    '—è –∫–∞–∫–∞—à–µ—á–Ω—ã–π –±–∞—Ä–æ–Ω) —É–ª—ã–±–Ω—É–ª—Å—è –ø–æ—à—ë–ª –≤–æ–Ω!)',
    '–ª–æ—Ö–∏ –µ—Å—Ç—å? –∏ —á–º–æ—Ö–∏ —Ç–æ–∂–µ? –Ω–∞ –∑–∞–∫–∞–∑–∞–≤—à–µ–≥–æ –ø–æ—Ö–æ–∂–∏...'
];

const ends = [
    '–Ω–∞—Ñ–∏–∫',
    '–Ω–∞—Ñ–∏–≥',
    '–Ω–∞—Ö—Ä–µ–Ω',
    '–Ω–∞—Ö–µ—Ä',
    '–Ω–∞—Ñ',
    '–Ω–∞—Ö',
    '–±–ª–∏–Ω',
    '–±–ª–∏–Ω –¥—É—à–∞',
    '–Ω–∞—Ö—É–π',
    '–±–ª—è—Ç—å',
    '–±–ª—è–¥—å',
    '–±–ª—è–¥—Ç—å',
    '–µ–¥—Ä—ë–Ω—ã—Ç—å',
];

const starts = [
  '–≥–æ–≤–æ—Ä–∏—Ç',
  '–¥—É–º–∞–µ—Ç',
  '—Å–æ–æ–±—â–∞–µ—Ç',
  '–∫—Ä–∏—á–∏—Ç',
  '–æ—Ä–µ—Ç',
  '–ø–µ—Ä–µ–¥–∞–µ—Ç',
  '—à–µ–ø—á–µ—Ç'
];


// Constructions
const getPhrase = username => {
  const randMain = Math.floor(Math.random() * mains.length);
  const main = mains[randMain];

  const isEnd = Math.round(Math.random());
  const randEnd = Math.floor(Math.random() * ends.length);
  const end = isEnd ? ` ${ends[randEnd]}` : '';

  const randStart = Math.floor(Math.random() * starts.length);
  const start = starts[randStart];

  const before = Math.round(Math.random()) ? '–ø–∏–∑–¥–µ—Ü, ' : '';

  return `${start}: "${before}${main}${end}", @${username} üí©`
};

const onSet = val => '—Ä–µ—à–∏–ª, —á—Ç–æ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞'
  + ` —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ ${val} "–Ω—É –∏ –≥–æ–≤–Ω–æ" :O`;

const onNoPoints = username => '—É—Å—Ç–∞–Ω–æ–≤–∏–ª, —á—Ç–æ —É'
  + ` @${username} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ë–ë–ü :D`;


// Test
if (require.main === module) {
  for (let i = 0; i < 50; i++) {
    console.log(getPhrase('User'));
  }
}


// Exports
module.exports = {
  getPhrase,
  onSet,
  onNoPoints
};

